import{automata,NeuralCA,setAutomata}from"../automata.js";import{genShieldedFunction,getConsoleText,mooreNeighborhood,reshape2DArray,setConsoleText,stripStringToDecimal}from"../utils.js";import{infoMap,nameMap,settingsMap}from"./config.js";
//! Respond to specific automata being selected
document.querySelectorAll(".select-btn").forEach((t=>{t.addEventListener("click",(function(){this.classList.contains("selected")||(setAutomata(this.innerHTML),document.querySelectorAll(".select-btn").forEach((t=>t.classList.remove("selected"))),this.classList.add("selected"),updateAutomataSelect(this.innerHTML))}))}));export function updateAutomataSelect(t){document.getElementById("automata-btn").innerHTML=nameMap[t]?nameMap[t]:t,document.querySelectorAll(".side-content").forEach((t=>t.style.display="none")),document.getElementById(infoMap[t]).style.display="block",document.querySelectorAll(".automata-settings").forEach((t=>t.style.display="none")),document.getElementById(settingsMap[t]).style.display="block";try{createGrid(settingsMap[t])}catch(t){}}
//! Neighborhood selectors
function createGrid(t){const e=document.getElementById(t),a=parseInt(e.querySelector(".row-select").value),n=parseInt(e.querySelector(".column-select").value),o=e.querySelector(".neighbor-grid"),i="block"==e.style.display;o.innerHTML="";const r=automata instanceof NeuralCA;let l=automata.weights?automata.weights:[];l=reshape2DArray(l,a,n),e.style.display="block";let s=(o.closest(".automata-settings").clientWidth-2*(n-1))/n,c=s<=30?s:30;const u=c*n+2*(n-1);let d=null;r&&(d=s),e.style.display=i?"block":"none",o.style.gridTemplateColumns=`repeat(${n}, ${d||c}px)`,o.style.gridTemplateRows=`repeat(${a}, ${c}px)`,o.style.width=u+"px";const m=Math.floor(a/2),g=Math.floor(n/2),p=automata.neighborhood;for(let t=0;t<a;t++)for(let e=0;e<n;e++)if(r){const i=document.createElement("input");i.type="text",i.dataset.row=t-m,i.dataset.column=e-g,i.addEventListener("input",(t=>{let e=t.target.value;e=e||stripStringToDecimal(t.target.value),e=""==e||"0"==e?"0.":e,t.target.value=e,updateWeights(t,a,n)})),i.value=l[t][e],0==i.value&&i.classList.add("neural-inactive"),t===m&&e===g&&i.classList.add("center"),o.appendChild(i)}else{const a=document.createElement("input");a.type="checkbox",a.dataset.row=t-m,a.dataset.column=e-g,a.addEventListener("change",updateNeighborhood),-1!=JSON.stringify(p).indexOf(JSON.stringify([e-g,t-m]))&&(a.checked=!0),t===m&&e===g&&(a.checked=!1,a.disabled=!0),o.appendChild(a)}}function updateNeighborhood(t){let e=[];t.target.closest(".neighbor-grid").querySelectorAll("input").forEach((t=>{t.checked&&e.push([Number(t.dataset.column),Number(t.dataset.row)])})),automata.neighborhood=e}function updateWeights(t,e,a){const n=Math.floor(e/2),o=Math.floor(a/2);let i=[],r=new Array(e).fill(null).map((()=>new Array(a).fill(0)));t.target.closest(".neighbor-grid").querySelectorAll("input").forEach((t=>{const e=Number(t.dataset.row),a=Number(t.dataset.column);i.push([e,a]),r[e+n][a+o]=Number(t.value),0==t.value?t.classList.add("neural-inactive"):t.classList.remove("neural-inactive")})),automata.neighborhood=i,automata.weights=r}
//! Change in file load
document.getElementById("settings-btn").addEventListener("click",(()=>{if("object"==typeof settingsMap&&null!==settingsMap)for(let t of Object.values(settingsMap))try{createGrid(t,automata.neighborhood),window.addEventListener("resize",(()=>createGrid(t)))}catch(t){}})),document.querySelectorAll(".row-select").forEach((t=>t.addEventListener("input",(t=>{/^\d+$/.test(t.target.value)?createGrid(t.target.closest(".automata-settings").id):t.target.value=t.target.value.replace(/\D/g,"")})))),document.querySelectorAll(".column-select").forEach((t=>t.addEventListener("input",(t=>{/^\d+$/.test(t.target.value)?createGrid(t.target.closest(".automata-settings").id):t.target.value=t.target.value.replace(/\D/g,"")})))),document.getElementById("file-input").addEventListener("change",(t=>{const e=t.target.files[0];if(e){const t=new FileReader;t.onload=function(t){try{const e=JSON.parse(t.target.result);e.grid=reshape2DArray(e.grid,automata.grid.length,automata.grid[0].length),updateAutomataSelect(e.name),setAutomata(e.name,e.args,e.grid)}catch(t){console.log(t),document.getElementById("invalid-file-notice").style.display="block"}},t.readAsText(e)}else document.getElementById("invalid-file-notice").style.display="block"}),!1),
//! Life-like rules
document.getElementById("life-rule-input").addEventListener("input",(function(t){automata.setRules(t.target.value)})),
//! Elementary CA rules
document.getElementById("elementary-rule-input").addEventListener("input",(function(t){let e=Number(t.target.value.replace(/\D/g,""),10);e=e<0?0:e>255?255:e,t.target.value=e,automata.ruleNumber=e,automata.ruleMap=automata.parseEcaRule(automata.ruleNumber),automata.grid=automata.grid.map((t=>t.map((t=>1==t?t:2))))})),
//! Brian's Brain rules
document.getElementById("brain-rule-input").addEventListener("input",(function(t){automata.setRules(t.target.value)})),
//! Rock Paper Scissors Rule Input
document.getElementById("rps-rule-input").addEventListener("input",(function(t){let e=t.target.value;/^\d+$/.test(e)?(e=Number(e),0==e?setConsoleText("Invalid Rulestring!"):(automata.winCondition=t.target.value,"Invalid Rulestring!"==getConsoleText()&&setConsoleText("Valid Rulestring"))):(e=e.replace(/\D/g,""),e?t.target.value=e:setConsoleText("Invalid Rulestring!"))})),document.getElementById("rps-state-select").selectedIndex=0,document.getElementById("rps-state-select").onchange=t=>{automata.stateCount=Number(t.target.value)},
//! Neural CA Rules
document.getElementById("neural-randomize").onclick=t=>{const e=document.getElementById("neural-settings"),a=parseInt(e.querySelector(".row-select").value),n=parseInt(e.querySelector(".column-select").value);let o=new Array(a).fill(null).map((t=>new Array(n).fill(null).map((t=>Number(function(){let t=(2*Math.random()-1).toFixed(4);return t<0&&Math.random()<.15&&(t=Math.abs(t)),t}())))));automata.weights=o,createGrid(e.id),automata.randomize()},document.getElementById("neural-skip-input").addEventListener("input",(function(t){automata.skipFrames=document.getElementById("neural-skip-input").checked}));const presetSelector=document.getElementById("neural-preset-select");presetSelector.selectedIndex=0,presetSelector.onchange=t=>{const e={worms:{weights:[[.68,-.9,.68],[-.9,-.66,-.9],[.68,-.9,.68]],activation:"function activation(x) {\n\treturn -(1 / Math.pow(2, 0.6 * Math.pow(x, 2))) + 1\n}"},stars:{weights:[[.565,-.716,.565],[-.759,.627,-.759],[.565,-.716,.565]],activation:"function activation(x) {\n\treturn Math.abs(x)\n}"},waves:{weights:[[.565,-.716,.565],[-.716,.627,-.716],[.565,-.716,.565]],activation:"function activation(x) {\n\treturn Math.abs(1.2 * x)\n}"},mitosis:{weights:[[-.939,.88,-.939],[.88,.4,.88],[-.939,.88,-.939]],activation:"function activation(x) {\n\treturn -1 / (0.91 * Math.pow(x, 2) + 1) + 1\n}"},pathways:{weights:[[0,1,0],[1,1,1],[0,1,0]],activation:"function activation(x) {\n\treturn 1 / Math.pow(2, Math.pow(x - 3.5, 2))\n}"},"game-of-life":{weights:[[1,1,1],[1,9,1],[1,1,1]],activation:"function activation(x) {\n\tx = Math.round(x);\n\tif (x == 3 || x == 11 || x == 12) return 1;\n\treturn 0;\n}"}},a=document.getElementById("neural-settings");a.querySelector(".row-select").value=3,a.querySelector(".column-select").value=3,automata.neighborhood=mooreNeighborhood(1,!0),automata.weights=e[t.target.value].weights,createGrid("neural-settings"),editor.setValue(e[t.target.value].activation),automata.randomize(),automata.resetAnimationRequests()};const activationSelector=document.getElementById("neural-activation-select");function setActivation(type){const funcMap={identity:"function activation(x) {\n\treturn x;\n}",power:"function activation(x) {\n\treturn Math.pow(x, 2);\n}",absolute:"function activation(x) {\n\treturn Math.abs(x);\n}",tanh:"function activation(x) {\n\treturn (Math.exp(2 * x) - 1) / (Math.exp(2 * x) + 1);\n}","inverse-gaussian":"function activation(x) {\n\treturn -(1 / Math.pow(2, Math.pow(x, 2))) + 1;\n}"},evaluatedFuncMap=Object.fromEntries(Object.entries(funcMap).map((([key,funcString])=>[key,eval(`(${funcString})`)])));automata.activation=evaluatedFuncMap[type],automata.resetAnimationRequests(),editor.setValue(automata.activation.toString()),activationSelector.selectedIndex=Object.keys(funcMap).indexOf(type)}activationSelector.selectedIndex=activationSelector.options.length-1,activationSelector.onchange=t=>{setActivation(t.target.value)};const editor=ace.edit("neural-code-editor");export{editor};editor.setTheme("ace/theme/monokai"),editor.session.setMode("ace/mode/javascript"),editor.setOptions({fontSize:"10px",showLineNumbers:!0,showGutter:!0}),editor.session.setUseWrapMode(!0),editor.session.setUseSoftTabs(!0),editor.session.on("change",(function(_){activationSelector.selectedIndex=activationSelector.options.length-1;const code=editor.getValue();try{if(code){const activation=genShieldedFunction(eval(`(${code})`)),testValues=[Math.random(),Math.random(),Math.random(),0,1];testValues.forEach((t=>activation(t))),automata.activation=activation,automata.activationString=code,automata.resetAnimationRequests(),setConsoleText("Updated Activation Function!")}}catch(t){console.log(`Error: ${t}`),setConsoleText("Invalid Activation Function!")}})),
//! Huegene Rules
document.getElementById("huegene-random-input").addEventListener("input",(function(t){let e=Number(t.target.value.replace(/\D/g,""),10);e=e<0?0:e,t.target.value=e,automata.randomFactor=e,automata.updateOffset(!0)})),document.getElementById("huegene-fade-input").addEventListener("input",(function(t){automata.fade=document.getElementById("huegene-fade-input").checked})),document.getElementById("huegene-psychedelic-input").addEventListener("input",(function(t){automata.psychedelic=document.getElementById("huegene-psychedelic-input").checked}));